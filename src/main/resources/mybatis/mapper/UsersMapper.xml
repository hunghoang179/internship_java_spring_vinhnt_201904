<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.internship.demo.model.mapper.UserModelMapper">

	<resultMap id="UserResultMap"
		type="com.internship.demo.domain.Users">
		<result property="username" column="user_name" />
		<result property="status" column="is_deleted" />
	</resultMap>

	<select id="findAllUser" resultMap="UserResultMap">
		SELECT
		*
		FROM users u
	</select>

	<select id="findUserByUsernameOrMail" resultMap="UserResultMap"
		parameterType="String">
		SELECT
		*
		FROM
		users u WHERE u.user_name = #{username} OR
		u.mail = #{mail}
	</select>

	<select id="findUserById" resultMap="UserResultMap"
		parameterType="int">
		SELECT
		*
		FROM
		users u WHERE u.id = #{id}
	</select>

	<select id="findUserByUsername" parameterType="String"
		resultMap="UserModel">
		SELECT
		*
		FROM users u join role r on u.role = r.role_id
		WHERE
		u.user_name = #{username}
	</select>

	<select id="checkUpdateUser" resultMap="UserResultMap"
		parameterType="String">
		SELECT
		*
		FROM
		users u WHERE u.id != #{id} AND (u.user_name
		= #{username} OR u.mail =
		#{mail})
	</select>
	<resultMap id="UserModel"
		type="com.internship.demo.model.UserModel">
		<id property="id" column="id" />
		<result property="username" column="user_name" />
		<result property="password" column="password" />
		<result property="roleName" column="role_name" />
	</resultMap>

	<insert id='insertUser' parameterType='Users'>
		INSERT INTO
		USERS(user_name, password, mail, address, phone)
		VALUES(#{username},
		#{password}, #{mail}, #{address}, #{phone})
	</insert>

	<update id='updateUser' parameterType='Users'>
		UPDATE users u
		SET
		u.user_name = #{username}, u.password = #{password}, u.mail = #{mail},
		u.address = #{address}, u.phone = #{phone}
		WHERE u.id = #{id};
	</update>

	<update id='editUser' parameterType='Users'>
		UPDATE users u
		SET u.password
		= #{password}, u.address = #{address}, u.phone = #{phone}, u.role =
		#{role}, u.is_deleted = #{status}, u.update_user = #{updateUser},
		u.update_time = #{updateTime}
		WHERE u.id = #{id};
	</update>
</mapper>